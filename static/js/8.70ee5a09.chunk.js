(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{301:function(e,t,a){"use strict";a.r(t),a.d(t,"default",function(){return p}),a.d(t,"frontMatter",function(){return m});var n=a(6),r=a(7),i=a(10),l=a(8),c=a(9),o=a(0),u=a.n(o),s=a(510),m={},p=function(e){function t(){return Object(n.a)(this,t),Object(i.a)(this,Object(l.a)(t).apply(this,arguments))}return Object(c.a)(t,e),Object(r.a)(t,[{key:"render",value:function(){var e=this.props;return u.a.createElement(s.a,Object.assign({},e,{frontMatter:m}),u.a.createElement("div",null,u.a.createElement("p",null,"Command : Autoterm Format  : set autoterm (on/off)"),u.a.createElement("p",null,"     If your telnet/mud client supports it, EotL can communicate with it, and determine things such as the dimensions of your screen, and your terminal type (vt100, ansi, etc).  This defaults to on, but if you find that it isn't working properly, you can turn it off."),u.a.createElement("p",null,"See also: set, ansi, page-width, page-length")))}}]),t}(u.a.PureComponent)},508:function(e,t,a){"use strict";var n=a(27);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=n(a(0)),i=(0,n(a(29)).default)(r.default.createElement(r.default.Fragment,null,r.default.createElement("path",{fill:"none",d:"M0 0h24v24H0V0z"}),r.default.createElement("path",{d:"M5 18.08V19h.92l9.06-9.06-.92-.92z",opacity:".3"}),r.default.createElement("path",{d:"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM5.92 19H5v-.92l9.06-9.06.92.92L5.92 19zM20.71 5.63l-2.34-2.34c-.2-.2-.45-.29-.71-.29s-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41z"})),"CreateTwoTone");t.default=i},510:function(e,t,a){"use strict";var n,r=a(6),i=a(7),l=a(10),c=a(8),o=a(9),u=a(0),s=a.n(u),m=a(511),p=a(16),d=a.n(p),f=a(40),h=a.n(f),E=a(36),w=a.n(E),b=a(31),v=a.n(b),y=a(508),O=a.n(y),g=a(5),j=a(90),k=a(30),M=Object(g.withStyles)(k.a,{withTheme:!0})(n=function(e){function t(){return Object(r.a)(this,t),Object(l.a)(this,Object(c.a)(t).apply(this,arguments))}return Object(o.a)(t,e),Object(i.a)(t,[{key:"render",value:function(){var e=this.props,t=e.path,a=e.toggleWikiDrawer,n=e.wikiDrawerOpen,r=e.markdown,i=e.classes;return s.a.createElement("div",null,s.a.createElement(j.a,{path:t,markdown:r,toggle:a,open:n}),s.a.createElement(v.a,{className:i.sectionDivider}),s.a.createElement(d.a,{variant:"body1",component:"section"},s.a.createElement("pre",{className:i.textSection},this.props.children)),s.a.createElement("br",null),s.a.createElement(w.a,null,s.a.createElement(h.a,{container:!0,spacing:16},s.a.createElement(h.a,{item:!0},s.a.createElement(O.a,{className:i.createIcon})),s.a.createElement(h.a,{item:!0,xs:12,sm:!0},s.a.createElement(d.a,{variant:"subtitle1"},"This article was written in plain text, most likely copied from the MUD. You can help EotL by ",s.a.createElement(m.a,{to:"/wiki/"},"converting it")," to Markdown.")))))}}]),t}(u.Component))||n;t.a=M}}]);
//# sourceMappingURL=8.70ee5a09.chunk.js.map