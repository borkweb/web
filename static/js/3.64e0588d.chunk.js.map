{"version":3,"sources":["md/wiki/index.md"],"names":["frontMatter","title","description","see","MarkdownReact","props","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_js_components_wiki_IndexArticle__WEBPACK_IMPORTED_MODULE_7__","Object","assign","href","target","rel","react_router_dom__WEBPACK_IMPORTED_MODULE_6__","to","className","React","PureComponent"],"mappings":"8PAcUA,EAAc,CACvBC,MAAO,YACPC,YAAa,sBACbC,IAAK,CACJ,OACA,kBACA,YAGuBC,mLAEjB,IAAMC,EAAQC,KAAKD,MACnB,OAAOE,EAAAC,EAAAC,cAACC,EAAA,EAADC,OAAAC,OAAA,GAAaP,EAAb,CAAoBL,YAAaA,IAAaO,EAAAC,EAAAC,cAAA,WAAKF,EAAAC,EAAAC,cAAA,4QAAmQF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,+BAA+BC,OAAO,SAASC,IAAI,gCAA3D,qBAAnQ,MAClER,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,kMAAyLF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,mEAAmEC,OAAO,SAASC,IAAI,gCAA/F,cAAzL,+HAAicR,EAAAC,EAAAC,cAAA,KAAGI,KAAK,8DAA8DC,OAAO,SAASC,IAAI,gCAA1F,UAAjc,KACAR,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,gGAAuFF,EAAAC,EAAAC,cAAA,KAAGI,KAAK,6BAA6BC,OAAO,SAASC,IAAI,gCAAzD,eAAvF,4EACAR,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,wUACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,kTACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,wNACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,gdACAF,EAAAC,EAAAC,cAAA,iBACAF,EAAAC,EAAAC,cAAA,uJAA4IF,EAAAC,EAAAC,cAAA,sBAA5I,8FACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,4LACAF,EAAAC,EAAAC,cAAA,kSAA+RF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAMC,GAAG,KAAT,uBAA/R,KACAV,EAAAC,EAAAC,cAAA,uHAA8GF,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAME,UAAU,WAAWD,GAAG,4BAA9B,gBAA9G,4BAAmNV,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAME,UAAU,WAAWD,GAAG,4BAA9B,uBAAnN,iFAAoXV,EAAAC,EAAAC,cAAA,sBAApX,uFACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,wYACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,8NACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,2JA3B+CU,IAAMC","file":"static/js/3.64e0588d.chunk.js","sourcesContent":["\n    /*---\nwrapper: \"../../js/components/wiki/IndexArticle\"\r\ntitle: EotL Wiki\r\ndescription: EotL wiki overview.\r\nsee:\r\n  - MUDs\r\n  - Getting Started\r\n  - History\n---*/\n    import React from 'react';\n    import { Link } from 'react-router-dom'\nimport Wrapper from '../../js/components/wiki/IndexArticle';\n\n    const frontMatter = {\n\ttitle: 'EotL Wiki',\n\tdescription: 'EotL wiki overview.',\n\tsee: [\n\t\t'MUDs',\n\t\t'Getting Started',\n\t\t'History'\n\t]\n};\n    export default class MarkdownReact extends React.PureComponent {\n      render() {\n        const props = this.props;\n        return <Wrapper {...props} frontMatter={frontMatter}><div><p>It's a cruel world out there, but this wiki should supply you all the critical information you need to survive your adventure on EotL. To contribute, you can mudmail Devo with your content suggestions, or go right to the source by requesting access to the <a href=\"https://github.com/eotl/wiki\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github repository</a>. </p>\n<h3>Markdown</h3>\n<p>The wiki is written in Markdown with additional support for harnessing content from the wiki component library. If you need help getting started with Markdown syntax, check out this <a href=\"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">cheatsheet</a>. The rest of this document will assume you're familiar with the basics. The source code for this document can be viewed on <a href=\"https://raw.githubusercontent.com/eotl/wiki/master/index.md\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github</a>.</p>\n<h3>Front Matter</h3>\n<p>Front matter is a special data section at the top of your wiki article specified in <a href=\"http://yaml.org/start.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">YAML syntax</a> which you can include to specify how you want your page to be rendered.</p>\n<h4>wrapper</h4>\n<p>The wrapper value is a path to a JavaScript component which will enclose your page content. Depending on which wrapper you specify, your page may automatically get special content like navigational elements or dynamically generated subsections. If you don't specify a wrapper, your document will be displayed as-is.</p>\n<h4>prependJs</h4>\n<p>The prependJs value is a special directive which consists of a list of lines of JavaScript code to run when the article is composed. This is usually used to import JavaScript components you want to use in your article body. By default, the &lt;Link/&gt; component will be imported on all wiki pages.</p>\n<h4>title</h4>\n<p>The title value specifies the page title to be displayed in headers and in navigational elements like links and buttons. If you don't set a title, one will be calculated based on the article's file name.</p>\n<h4>description</h4>\n<p>The description value is a short phrase or sentence which describes the article content, and often appears with the title as a caption or subtitle. If no description is provided, the default behavior is to display nothing where a description would normally appear. However, based on the page type, a default description may be generated. For instance, category indexes will get a default description which consists of their subcategories and articles.</p>\n<h4>see</h4>\n<p>The see value lists which articles to link to in this article's \"See also\" section. The list values will be matched against an article's <em>filename</em>, not its title, with the value lowercased and spaces its spaces converted to underscores.</p>\n<h3>Links</h3>\n<p>There are a few different ways to specify links in your article content. For external links such as the ones displayed above, the standard Markdown link syntax is sufficient. </p>\n<p>For internal links, you will want to use the &lt;Link/&gt; tag instead of the standard Markdown links to render the new content internally instead of performing a full page refresh. This method uses the special JSX interpolation syntax with the tag enclosed in double braces, such as <Link to=\"/\">this home page link</Link>.</p>\n<p>You can also link directly to other wiki articles by using the double bracket syntax, such as this link to <Link className=\"internal\" to=\"/wiki/areas/eternal_city\">Eternal City</Link>, or this other one with <Link className=\"internal\" to=\"/wiki/areas/eternal_city\">alternate link text</Link>. The target inside the double brackets will be matched against the article's <em>filename</em>, not its title, with the value lowercased and its spaces converted to underscores.</p>\n<h3>Wrappers</h3>\n<p>Different wrapper components can be used for different types of articles to automatically generate surrounding content, such as headers, footers, and sidebars. While you can entirely forgo specifying a wrapper and format the entire article yourself, it's recommended to share wrappers across articles that have the same format for the sake of uniformity and ease of maintenance. </p>\n<h4>BasicArticle</h4>\n<p>The basic article wrapper contains the standard header and a \"See also\" section for any articles specified in the 'see' front matter. It also supplies breadcrumbs and a sidebar for browsing the article tree.</p>\n<h4>IndexArticle</h4>\n<p>Used for category indexes, index articles are like basic articles but also contain sections for subcategory and member article lists.</p></div></Wrapper>;\n      }\n    };\n    export { frontMatter };\n  "],"sourceRoot":""}