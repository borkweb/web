(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{358:function(e,t,a){"use strict";a.r(t),a.d(t,"default",function(){return d}),a.d(t,"frontMatter",function(){return m});var n=a(6),r=a(7),l=a(10),i=a(8),c=a(9),o=a(0),s=a.n(o),u=a(510),m={},d=function(e){function t(){return Object(n.a)(this,t),Object(l.a)(this,Object(i.a)(t).apply(this,arguments))}return Object(c.a)(t,e),Object(r.a)(t,[{key:"render",value:function(){var e=this.props;return s.a.createElement(u.a,Object.assign({},e,{frontMatter:m}),s.a.createElement("div",null,s.a.createElement("p",null,"Command : Page Width format: set page-width (",s.a.createElement("number",null,"/auto)")),s.a.createElement("p",null,"     This value should be the width of your terminal window, in characters.  This may or may not be used by various things on the mud, but it's always nice to have.  Telnet negotiation can determine this if it's set to \"auto\" (default), and autoterm is set on (only if your telnet client supports it)."),s.a.createElement("p",null,"See also: set, page-height, autoterm")))}}]),t}(s.a.PureComponent)},508:function(e,t,a){"use strict";var n=a(27);Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=n(a(0)),l=(0,n(a(29)).default)(r.default.createElement(r.default.Fragment,null,r.default.createElement("path",{fill:"none",d:"M0 0h24v24H0V0z"}),r.default.createElement("path",{d:"M5 18.08V19h.92l9.06-9.06-.92-.92z",opacity:".3"}),r.default.createElement("path",{d:"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM5.92 19H5v-.92l9.06-9.06.92.92L5.92 19zM20.71 5.63l-2.34-2.34c-.2-.2-.45-.29-.71-.29s-.51.1-.7.29l-1.83 1.83 3.75 3.75 1.83-1.83c.39-.39.39-1.02 0-1.41z"})),"CreateTwoTone");t.default=l},510:function(e,t,a){"use strict";var n,r=a(6),l=a(7),i=a(10),c=a(8),o=a(9),s=a(0),u=a.n(s),m=a(511),d=a(16),h=a.n(d),p=a(40),f=a.n(p),b=a(36),E=a.n(b),w=a(31),v=a.n(w),y=a(508),g=a.n(y),O=a(5),j=a(90),k=a(30),M=Object(O.withStyles)(k.a,{withTheme:!0})(n=function(e){function t(){return Object(r.a)(this,t),Object(i.a)(this,Object(c.a)(t).apply(this,arguments))}return Object(o.a)(t,e),Object(l.a)(t,[{key:"render",value:function(){var e=this.props,t=e.path,a=e.toggleWikiDrawer,n=e.wikiDrawerOpen,r=e.markdown,l=e.classes;return u.a.createElement("div",null,u.a.createElement(j.a,{path:t,markdown:r,toggle:a,open:n}),u.a.createElement(v.a,{className:l.sectionDivider}),u.a.createElement(h.a,{variant:"body1",component:"section"},u.a.createElement("pre",{className:l.textSection},this.props.children)),u.a.createElement("br",null),u.a.createElement(E.a,null,u.a.createElement(f.a,{container:!0,spacing:16},u.a.createElement(f.a,{item:!0},u.a.createElement(g.a,{className:l.createIcon})),u.a.createElement(f.a,{item:!0,xs:12,sm:!0},u.a.createElement(h.a,{variant:"subtitle1"},"This article was written in plain text, most likely copied from the MUD. You can help EotL by ",u.a.createElement(m.a,{to:"/wiki/"},"converting it")," to Markdown.")))))}}]),t}(s.Component))||n;t.a=M}}]);
//# sourceMappingURL=65.3fc19d4f.chunk.js.map